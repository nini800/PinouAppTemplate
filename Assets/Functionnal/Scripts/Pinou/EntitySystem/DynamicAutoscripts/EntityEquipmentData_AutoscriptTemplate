using Sirenix.OdinInspector;
using System.Collections.Generic;
using UnityEngine;

namespace Pinou.EntitySystem	
{
	public partial class EntityEquipmentData : EntityComponentData
	{
		[Header("Default Equipment")]
		[Space]
|PRIVATEBUILDERFIELDS|

		public EntityEquipableBuilder GetDefaultEquipableBuilder(EntityEquipableType equipmentType)
		{
			switch(equipmentType)
			{
|SWITCHDEFAULTEQUIPMENT|
			}
			
			throw new System.Exception("No Equipable " + equipmentType + " found.");
		}
	
        public partial class EntityEquipment : EntityComponent
        {
|PRIVATEINSTANCEFIELDS|

			public bool GetHasEquipped(EntityEquipableType equipmentType)
			{
				switch(equipmentType)
				{
|SWITCHHASEQUIPPED|
				}
				
				throw new System.Exception("No Equipable " + equipmentType + " found.");
			}
			public EntityEquipable GetEquipped(EntityEquipableType equipmentType)
			{
				switch(equipmentType)
				{
|SWITCHEQUIPPED|
				}
				
				throw new System.Exception("No Equipable " + equipmentType + " found.");
			}
			protected void SetEquipped(EntityEquipableType type, EntityEquipable equipable)
			{
				if (equipable != null && equipable.Type != type) { return; }
				
				switch(type)
				{
|SWITCHEQUIP|
				}
			}
        }
    }
}